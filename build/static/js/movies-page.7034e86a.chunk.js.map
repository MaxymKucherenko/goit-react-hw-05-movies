{"version":3,"sources":["services/Api.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MoviesPage.js"],"names":["axios","defaults","baseURL","KEY","getTrend","get","getOneMovie","id","getReview","getCast","getByQuery","query","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MovieList","lazy","MoviesPage","useState","valueForm","setValueForm","movies","setMovies","setQuery","location","useLocation","history","useHistory","getQuery","URLSearchParams","search","useEffect","then","response","data","results","catch","error","console","log","onSubmit","event","preventDefault","type","onChange","fallback","title"],"mappings":"yIAAA,+LACAA,IAAMC,SAASC,QAAU,+BACzB,IAAMC,EAAM,2CAECC,EAAW,WACtB,OAAOJ,IAAMK,IAAN,8BAAiCF,KAG7BG,EAAc,SAACC,GAC1B,OAAOP,IAAMK,IAAN,iBAAoBE,EAApB,YAA0BJ,KAGtBK,EAAY,SAACD,GACxB,OAAOP,IAAMK,IAAN,iBAAoBE,EAApB,oBAAkCJ,EAAlC,aAGIM,EAAU,SAACF,GACtB,OAAOP,IAAMK,IAAN,iBAAoBE,EAApB,oBAAkCJ,KAG9BO,EAAa,SAACC,GACzB,OAAOX,IAAMK,IAAN,wBACYF,EADZ,kBACyBQ,EADzB,kC,gCCrBM,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,gDC5BHQ,EAAYC,gBAAK,kBACrB,gCAmDaC,UAhDI,WACjB,MAAkCC,mBAAS,UAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOjC,EAAP,KAAcsC,EAAd,KACMC,EAAWC,cACXC,EAAUC,cACVC,EAAW,IAAIC,gBAAgBL,EAASM,QAAQnD,IAAI,SAE1DoD,qBAAU,YACI,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUlB,QAAS,GACrBa,EAASK,GAEG,KAAV3C,GAIJD,YAAWC,GACR+C,MAAK,SAACC,GACLX,EAAUW,EAASC,KAAKC,YAEzBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACT,EAAU3C,IAWd,OACE,qCACE,uBAAMuD,SAPO,SAACC,GAChBA,EAAMC,iBACNnB,EAASJ,GACTO,EAAQtB,KAAR,OAAkBoB,GAAlB,IAA4BM,OAAO,SAAD,OAAWX,OAI3C,UACE,gCACE,uBAAOwB,KAAK,OAAOtD,MAAO8B,EAAWyB,SAb5B,SAACH,GAChBA,EAAMC,iBACNtB,EAAaqB,EAAMlC,OAAOlB,YAatB,uBAAOsD,KAAK,SAAStD,MAAM,oBAEV,IAAlBgC,EAAOX,QACN,cAAC,WAAD,CAAUmC,SAAU,yCAApB,SACE,cAAC9B,EAAD,CAAWM,OAAQA,EAAQyB,MAAO","file":"static/js/movies-page.7034e86a.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst KEY = 'api_key=d31dc209da92a25c5da2bd6eebb5b4e2';\r\n\r\nexport const getTrend = () => {\r\n  return axios.get(`/trending/movie/day?${KEY}`);\r\n};\r\n\r\nexport const getOneMovie = (id) => {\r\n  return axios.get(`/movie/${id}?${KEY}`);\r\n};\r\n\r\nexport const getReview = (id) => {\r\n  return axios.get(`/movie/${id}/reviews?${KEY}&page=1`);\r\n};\r\n\r\nexport const getCast = (id) => {\r\n  return axios.get(`/movie/${id}/credits?${KEY}`);\r\n};\r\n\r\nexport const getByQuery = (query) => {\r\n  return axios.get(\r\n    `/search/movie?${KEY}&query=${query}&page=1&include_adult=false`\r\n  );\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { getByQuery } from '../services/Api';\r\nimport { useState, useEffect, lazy, Suspense } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useLocation } from 'react-router';\r\n\r\nconst MovieList = lazy(() =>\r\n  import('./MovieList' /* webpackChunkName: \"movie-list\" */)\r\n);\r\n\r\nconst MoviesPage = () => {\r\n  const [valueForm, setValueForm] = useState('batman');\r\n  const [movies, setMovies] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const getQuery = new URLSearchParams(location.search).get('query');\r\n\r\n  useEffect(() => {\r\n    if (getQuery?.length > 0) {\r\n      setQuery(getQuery);\r\n    }\r\n    if (query === '') {\r\n      return;\r\n    }\r\n\r\n    getByQuery(query)\r\n      .then((response) => {\r\n        setMovies(response.data.results);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [getQuery, query]);\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    setValueForm(event.target.value);\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setQuery(valueForm);\r\n    history.push({ ...location, search: `query=${valueForm}` });\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <label>\r\n          <input type=\"text\" value={valueForm} onChange={onChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Search Movie\" />\r\n      </form>\r\n      {movies.length !== 0 && (\r\n        <Suspense fallback={<h1>LOADING</h1>}>\r\n          <MovieList movies={movies} title={'Films found'} />\r\n        </Suspense>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}
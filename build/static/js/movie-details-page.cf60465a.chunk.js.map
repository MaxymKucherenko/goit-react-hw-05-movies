{"version":3,"sources":["services/Api.js","images/foto.jpg","components/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","KEY","getTrend","get","getOneMovie","id","getReview","getCast","getByQuery","query","Cast","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","status","setStatus","movieId","useParams","url","useRouteMatch","location","useLocation","history","useHistory","useEffect","then","response","data","catch","error","console","log","backdrop_path","alt","title","score","overview","genres","original_title","name","className","type","color","height","width","timeout","onClick","push","state","from","label","src","backImage","map","genre","to","pathname","hash","allback","path"],"mappings":"yIAAA,+LACAA,IAAMC,SAASC,QAAU,+BACzB,IAAMC,EAAM,2CAECC,EAAW,WACtB,OAAOJ,IAAMK,IAAN,8BAAiCF,KAG7BG,EAAc,SAACC,GAC1B,OAAOP,IAAMK,IAAN,iBAAoBE,EAApB,YAA0BJ,KAGtBK,EAAY,SAACD,GACxB,OAAOP,IAAMK,IAAN,iBAAoBE,EAApB,oBAAkCJ,EAAlC,aAGIM,EAAU,SAACF,GACtB,OAAOP,IAAMK,IAAN,iBAAoBE,EAApB,oBAAkCJ,KAG9BO,EAAa,SAACC,GACzB,OAAOX,IAAMK,IAAN,wBACYF,EADZ,kBACyBQ,EADzB,kC,mDCrBM,MAA0B,iC,qDCanCC,EAAOC,gBAAK,kBAChB,gCAEIC,EAAUD,gBAAK,kBACnB,gCAmIaE,UAhIU,WAAO,IAAD,MAC7B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEQC,EAAYC,cAAZD,QACAE,EAAQC,cAARD,IACFE,EAAWC,cACXC,EAAUC,cAEhBC,qBAAU,WACRvB,YAAYe,GACTS,MAAK,SAACC,GACLb,EAASa,EAASC,MAClBZ,GAAU,MAEXa,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACb,IAEJ,IACEgB,EAQEpB,EARFoB,cACAC,EAOErB,EAPFqB,IACAC,EAMEtB,EANFsB,MACAC,EAKEvB,EALFuB,MACAC,EAIExB,EAJFwB,SACAC,EAGEzB,EAHFyB,OACAC,EAEE1B,EAFF0B,eACAC,EACE3B,EADF2B,KAOF,OAEE,aADA,CACA,OAAKC,UAAU,YAAf,SACG1B,EACC,cAAC,IAAD,CACE2B,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,IAIX,qCACE,wBAAQJ,KAAK,SAASK,QAlBb,WAAO,IAAD,IACrBxB,EAAQyB,KAAR,iBAAa3B,QAAb,IAAaA,GAAb,UAAaA,EAAU4B,aAAvB,aAAa,EAAiBC,KAAK7B,gBAAnC,QAA+C,MAiBzC,0BACGA,QADH,IACGA,GADH,UACGA,EAAU4B,aADb,iBACG,EAAiBC,YADpB,aACG,EAAuBC,aAD1B,QACmC,WAEnC,sBAAKV,UAAU,OAAf,UACE,qBACEW,IACEnB,EAAa,yCACyBA,GAClCoB,EAENnB,IAAKA,IAEP,sBAAKO,UAAU,QAAf,UACE,6BAAKN,GAASI,GAAkBC,IAChC,4BAAIJ,IACJ,0CACA,4BAAIC,IACJ,wCACA,oBAAII,UAAU,SAAd,SACGH,EAAOgB,KAAI,SAACC,EAAOpD,GAAR,OACV,6BAAcoD,EAAMf,MAAXrC,cAKjB,sBAAKsC,UAAU,MAAf,UACE,uDACA,+BACE,6BACE,cAAC,IAAD,CACEe,GAAI,CAEFC,SAAS,GAAD,OAAKtC,EAAL,YACR8B,MAAO,CACLC,KAAM,CACJ7B,WACA8B,MAAO,6BAPf,uBAgBF,+BACG,IACD,eAAC,IAAD,CACEK,GAAI,CAEFC,SAAS,GAAD,OAAKtC,EAAL,SACR8B,MAAO,CACLC,KAAM,CAEJ7B,WACAqC,KAAM,QACNP,MAAO,6BATf,UAcG,IAdH,mBAoBN,eAAC,WAAD,CAAUQ,QAAS,yCAAnB,UACE,cAAC,IAAD,CAAOC,KAAK,wBAAZ,SACE,cAACpD,EAAD,MAGF,cAAC,IAAD,CAAOoD,KAAK,2BAAZ,SACE,cAAClD,EAAD","file":"static/js/movie-details-page.cf60465a.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst KEY = 'api_key=d31dc209da92a25c5da2bd6eebb5b4e2';\r\n\r\nexport const getTrend = () => {\r\n  return axios.get(`/trending/movie/day?${KEY}`);\r\n};\r\n\r\nexport const getOneMovie = (id) => {\r\n  return axios.get(`/movie/${id}?${KEY}`);\r\n};\r\n\r\nexport const getReview = (id) => {\r\n  return axios.get(`/movie/${id}/reviews?${KEY}&page=1`);\r\n};\r\n\r\nexport const getCast = (id) => {\r\n  return axios.get(`/movie/${id}/credits?${KEY}`);\r\n};\r\n\r\nexport const getByQuery = (query) => {\r\n  return axios.get(\r\n    `/search/movie?${KEY}&query=${query}&page=1&include_adult=false`\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/foto.7eea344e.jpg\";","import backImage from '../images/foto.jpg';\r\nimport {\r\n  useParams,\r\n  NavLink,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport { useState, useEffect, lazy, Suspense } from 'react';\r\nimport { getOneMovie } from '../services/Api';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Route } from 'react-router';\r\n\r\nconst Cast = lazy(() =>\r\n  import('./Cast' /* webpackChunkName: \"cast\" */)\r\n);\r\nconst Reviews = lazy(() =>\r\n  import('./Reviews' /* webpackChunkName: \"reviews\" */)\r\n);\r\n\r\nconst MovieDetailsPage = () => {\r\n  const [movie, setMovie] = useState({});\r\n  const [status, setStatus] = useState(true);\r\n\r\n  const { movieId } = useParams();\r\n  const { url } = useRouteMatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getOneMovie(movieId)\r\n      .then((response) => {\r\n        setMovie(response.data);\r\n        setStatus(false);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [movieId]);\r\n\r\n  const {\r\n    backdrop_path,\r\n    alt,\r\n    title,\r\n    score,\r\n    overview,\r\n    genres,\r\n    original_title,\r\n    name,\r\n  } = movie;\r\n\r\n  const onGoBack = () => {\r\n    history.push(location?.state?.from.location ?? '/');\r\n  };\r\n\r\n  return (\r\n    //*___________________SPINNER*//\r\n    <div className=\"container\">\r\n      {status ? (\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={0}\r\n        />\r\n      ) : (\r\n        //*___________________MAIN INFO*//\r\n        <>\r\n          <button type=\"button\" onClick={onGoBack}>\r\n            {location?.state?.from?.label ?? 'Return'}\r\n          </button>\r\n          <div className=\"Info\">\r\n            <img\r\n              src={\r\n                backdrop_path\r\n                  ? `https://image.tmdb.org/t/p/w500${backdrop_path}`\r\n                  : backImage\r\n              }\r\n              alt={alt}\r\n            />\r\n            <div className=\"about\">\r\n              <h2>{title || original_title || name}</h2>\r\n              <p>{score}</p>\r\n              <h3>Overview</h3>\r\n              <p>{overview}</p>\r\n              <h4>Genres</h4>\r\n              <ul className=\"genres\">\r\n                {genres.map((genre, id) => (\r\n                  <li key={id}>{genre.name}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"add\">\r\n            <p>Additional information</p>\r\n            <ul>\r\n              <li>\r\n                <NavLink\r\n                  to={{\r\n                    //*___________________Reviews*//\r\n                    pathname: `${url}/reviews`,\r\n                    state: {\r\n                      from: {\r\n                        location,\r\n                        label: 'Return to previous page',\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  Reviews\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li>\r\n                {' '}\r\n                <NavLink\r\n                  to={{\r\n                    //*___________________Cast*//\r\n                    pathname: `${url}/cast`,\r\n                    state: {\r\n                      from: {\r\n                        // pathname: '/',\r\n                        location,\r\n                        hash: '#cast',\r\n                        label: 'Return to previous page',\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {' '}\r\n                  Cast\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <Suspense allback={<h1>LOADING</h1>}>\r\n            <Route path=\"/movies/:movieId/cast\">\r\n              <Cast />\r\n            </Route>\r\n\r\n            <Route path=\"/movies/:movieId/reviews\">\r\n              <Reviews />\r\n            </Route>\r\n          </Suspense>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}
{"version":3,"sources":["../../node_modules/style-inject/dist/style-inject.es.js","../../src/index.tsx","components/Reviews.js"],"names":["css","ref","insertAt","document","head","style","top","className","styles","color","smooth","component","viewBox","svgPath","props","useState","visible","setVisible","useEffect","addEventListener","onScroll","removeEventListener","documentElement","scrollTop","React","onClick","window","scrollTo","behavior","scrollToTop","fill","d","Reviews","movieId","useParams","review","setReview","status","setStatus","getReview","then","data","results","type","height","width","timeout","length","map","rev","id","author","content"],"mappings":"kcAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,MACtB,IAAIC,EAAWD,EAAf,SAEA,GAAKD,GAAL,qBAAmBG,SAAnB,CAEA,IAAIC,EAAOD,eAAiBA,sCAA5B,GACIE,EAAQF,uBAAZ,SACAE,kBAEA,QAAIH,GACEE,EAAJ,WACEA,iBAAyBA,EAAzBA,YAKFA,iBAGEC,EAAJ,WACEA,uBAEAA,cAAkBF,wBAAlBE,K,kdCGA,SAAC,GACH,QAAAC,WAAG,IAAG,KAAE,EACR,IAAAC,iBAAS,IAAG,EAAAC,EAAuB,EACnC,IAAAC,aAAK,IAAG,UAAO,EACf,IAAAC,cAAM,IAAG,GAAK,EACd,IAAAC,iBAAS,IAAG,KAAE,EACd,IAAAC,eAAO,IAAG,gBAAa,EACvB,IAAAC,eAAO,IAAG,wSAAqS,EAC5SC,E,0UAAK,GARL,sEAUK,EAAwBC,YAAS,GAAhCC,EAAO,KAAEC,EAAU,KAC1BC,aAAU,WAGR,OAFAf,SAASgB,iBAAiB,SAAUC,GAE7B,WAAM,OAAAjB,SAASkB,oBAAoB,SAAUD,MACnD,IAEH,IAAMA,EAAW,WACfH,EAAWd,SAASmB,gBAAgBC,UAAYjB,IAGlD,OACEkB,gCACGR,GACCQ,4BACEjB,UAAWA,EACXkB,QAAS,WAAM,OAvC3B,SAAqBf,QAAA,IAAAA,OAAA,GACfA,EACFgB,OAAOC,SAAS,CACdrB,IAAK,EACLsB,SAAU,WAGZzB,SAASmB,gBAAgBC,UAAY,EAgCdM,CAAYnB,KACvBI,GAEHH,GACCa,uBAAKM,KAAMrB,EAAOG,QAASA,GACzBY,wBAAMO,EAAGlB,S,kHCVVmB,UAzCC,WACd,IAAQC,EAAYC,cAAZD,QACR,EAA4BlB,mBAAS,IAArC,mBAAOoB,EAAP,KAAeC,EAAf,KACA,EAA4BrB,mBAAS,GAArC,mBAAOsB,EAAP,KAAeC,EAAf,KAUA,OARApB,qBAAU,WACRqB,YAAUN,GAASO,MAAK,SAACC,GACvBL,EAAUK,EAAKA,KAAKC,SACpBJ,EAAUG,EAAKJ,QACfX,OAAOC,SAAS,EAAG,UAEpB,CAACM,IAGF,qCACE,cAAC,IAAD,CAAavB,QAAQ,KAEnB2B,GACA,cAAC,IAAD,CACEM,KAAK,OACLlC,MAAM,UACNmC,OAAQ,IACRC,MAAO,IACPC,QAAS,IAGZX,EAAOY,OACN,6BACGZ,EAAOa,KAAI,SAACC,EAAKC,GAAN,OACV,+BACE,kDAAqBD,EAAIE,OAAzB,OACA,4BAAIF,EAAIG,YAFDF,QAOb","file":"static/js/reviews.80fd07a3.chunk.js","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useState, useEffect } from \"react\";\n\n//@ts-ignore\nimport styles from \"./styles.css\";\n\ntype Props = {\n  top?: number;\n  smooth?: boolean;\n  svgPath?: string;\n  viewBox?: string;\n  component?: any;\n};\n\nfunction scrollToTop(smooth: boolean = false) {\n  if (smooth) {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  } else {\n    document.documentElement.scrollTop = 0;\n  }\n}\n\nconst ScrollToTop: React.FC<\n  Props & React.HTMLAttributes<HTMLButtonElement>\n> = ({\n  top = 20,\n  className = styles[\"scroll-to-top\"],\n  color = \"black\",\n  smooth = false,\n  component = \"\",\n  viewBox = \"0 0 256 256\",\n  svgPath = \"M222.138,91.475l-89.6-89.6c-2.5-2.5-6.551-2.5-9.051,0l-89.6,89.6c-2.5,2.5-2.5,6.551,0,9.051s6.744,2.5,9.244,0L122,21.85  V249.6c0,3.535,2.466,6.4,6,6.4s6-2.865,6-6.4V21.85l78.881,78.676c1.25,1.25,2.992,1.875,4.629,1.875s3.326-0.625,4.576-1.875  C224.586,98.025,224.638,93.975,222.138,91.475z\",\n  ...props\n}) => {\n    const [visible, setVisible] = useState(false);\n    useEffect(() => {\n      document.addEventListener(\"scroll\", onScroll);\n      // Remove listener on unmount\n      return () => document.removeEventListener(\"scroll\", onScroll);\n    }, []);\n\n    const onScroll = () => {\n      setVisible(document.documentElement.scrollTop > top);\n    };\n\n    return (\n      <>\n        {visible && (\n          <button\n            className={className}\n            onClick={() => scrollToTop(smooth)}\n            {...props}\n          >\n            {component ? component : (\n              <svg fill={color} viewBox={viewBox}>\n                <path d={svgPath}></path>\n              </svg>\n            )}\n          </button>\n        )}\n      </>\n    );\n  };\n\nexport default ScrollToTop;\n","import { useParams } from 'react-router';\r\nimport { useEffect, useState } from 'react';\r\nimport { getReview } from '../services/Api';\r\nimport Loader from 'react-loader-spinner';\r\nimport ScrollToTop from 'react-scroll-to-top';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n  const [review, setReview] = useState([]);\r\n  const [status, setStatus] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getReview(movieId).then((data) => {\r\n      setReview(data.data.results);\r\n      setStatus(data.status);\r\n      window.scrollTo(0, 600);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <ScrollToTop smooth={true} />\r\n\r\n      {!status && (\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={0}\r\n        />\r\n      )}\r\n      {review.length ? (\r\n        <ul>\r\n          {review.map((rev, id) => (\r\n            <li key={id}>\r\n              <p>Author Username: {rev.author}.</p>\r\n              <p>{rev.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>This movie not have reviews</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Reviews;\r\n"],"sourceRoot":""}